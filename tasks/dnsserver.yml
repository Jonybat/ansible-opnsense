---
- name: Count dnsservers set
  delegate_to: localhost
  community.general.xml:
    path: "{{ local_config_path }}"
    xpath: /opnsense/system/dnsserver
    count: true
  register: dnsservercount
  when: dnsserver is defined

- name: Get dnsservers set
  delegate_to: localhost
  community.general.xml:
    path: "{{ local_config_path }}"
    xpath: /opnsense/system/dnsserver
    content: text
  register: configured_dnsserver
  when:
    - dnsserver is defined
    - dnsservercount.count > 0

- name: register fact change_dns
  ansible.builtin.set_fact:
    change_dns: true
  with_items: "{{ configured_dnsserver.matches }}"
  when:
    - dnsserver is defined
    - dnsservercount.count > 0
    - (item.dnsserver not in dnsserver) or (dnsserver | length) != (configured_dnsserver.matches | length)

- name: register fact change_dns
  ansible.builtin.set_fact:
    change_dns: true
  when:
    - dnsserver is defined
    - dnsservercount.count == 0
    - dnsserver | length > 0

- name: Reset dnsservers
  delegate_to: localhost
  community.general.xml:
    path: "{{ local_config_path }}"
    xpath: /opnsense/system/dnsserver
    state: absent
    pretty_print: true
  when: change_dns | default(false)

- name: Dnsservers
  delegate_to: localhost
  community.general.xml:
    path: "{{ local_config_path }}"
    xpath: /opnsense/system
    add_children:
      - dnsserver: "{{ item }}"
    pretty_print: true
  when: change_dns | default(false)
  with_items:
    "{{ dnsserver }}"

- name: register fact dnsallowoverride_state
  ansible.builtin.set_fact:
    dnsallowoverride_state: "present"
  when: dnsallowoverride | default(true)
- name: register fact dnsallowoverride_state
  ansible.builtin.set_fact:
    dnsallowoverride_state: "absent"
  when: not (dnsallowoverride | default(true))

- name: Set dnsallowoverride {{ dnsallowoverride_state }}
  delegate_to: localhost
  community.general.xml:
    path: "{{ local_config_path }}"
    xpath: /opnsense/system/dnsallowoverride
    state: "{{ dnsallowoverride_state }}"
    pretty_print: true

- name: Use the local DNS service as a nameserver for this system
  delegate_to: localhost
  community.general.xml:
    path: "{{ local_config_path }}"
    xpath: /opnsense/system/dnslocalhost
    value: "1"
    pretty_print: true
  when: dnslocalhost | default(false)

- name: Do not use the local DNS service as a nameserver for this system
  delegate_to: localhost
  community.general.xml:
    path: "{{ local_config_path }}"
    xpath: /opnsense/system/dnslocalhost
    state: absent
    pretty_print: true
  when: not (dnslocalhost | default(false))
...
