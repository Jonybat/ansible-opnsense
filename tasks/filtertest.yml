---
- name: register definitions from xml ...
  delegate_to: localhost
  community.general.xml:
    path: "{{ local_config_path }}"
    xpath: "/opnsense/filter/rule[{% if _filter.uuid is defined %}@uuid='{{ _filter.uuid }}'{% else %}descr/text()='{{ _filter.descr }}'{% endif %}]/{{ _srcdst }}/{{ _checkelements }}"  # noqa  yaml[line-length]
    count: true
  register: _checkelementscount
  with_items:
    - address
    - network
    - any
  loop_control:
    loop_var: _checkelements

- name: filter definitions from xml ...
  ansible.builtin.set_fact:
    _foundcheckelements: "{{ (_foundcheckelements3 | default([])) + [item._checkelements] }}"
  with_items: "{{ _checkelementscount.results }}"
  when: item.count | int > 0

- name: check var _foundcheckelements
  ansible.builtin.assert:
    that:
      - _foundcheckelements is not string
      - _foundcheckelements is not mapping
      - _foundcheckelements is iterable

- name: report duplicated elements ...
  ansible.builtin.fail:
    msg: "rule '{{ _filter.descr }}' has a error in {{ _srcdst }}: only one of these should be defined: {{ _foundcheckelements | join(', ') }}"
  when: _foundcheckelements | length > 1
...
