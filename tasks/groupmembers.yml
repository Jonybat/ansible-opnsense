---

# required for loop in test
- name: groups - set vars to sane state
  ansible.builtin.set_fact:
    configuredmemberlist: []

- name: groups - count members from xml
  delegate_to: localhost
  community.general.xml:
    path: "{{ local_config_path }}"
    xpath: "/opnsense/system/group[name/text()='{{ group.name }}']/member"
    count: true
  register: membercount

- name: groups - handle current members
  when: membercount.count > 0
  block:
    - name: groups - get current members
      delegate_to: localhost
      community.general.xml:
        path: "{{ local_config_path }}"
        xpath: "/opnsense/system/group[name/text()='{{ group.name }}']/member"
        content: text
      register: configured_members

    - name: groups - map current members
      ansible.builtin.set_fact:
        configuredmemberlist: "{{ configured_members.matches | map(attribute='member') }}"

    - name: assert VARs related to configured members are sane ...
      ansible.builtin.assert:
        that:
          - configured_members is not string
          - configured_members is mapping
          - configuredmemberlist is not string
          - configuredmemberlist is not mapping
          - configuredmemberlist is iterable

    - name: debug configured_members
      ansible.builtin.debug:
        var: configured_members
        verbosity: 1
    - name: debug configuredmemberlist
      ansible.builtin.debug:
        var: configuredmemberlist
        verbosity: 1

- name: groups - get requested members
  ansible.builtin.set_fact:
    requestedmemberlist: "{{ group.settings | selectattr('key', 'equalto', 'member') | map(attribute='value') }}"

- name: assert sane state of requestedmemberlist var ...
  ansible.builtin.assert:
    that:
      - requestedmemberlist is not string
      - requestedmemberlist is not mapping
      - requestedmemberlist is iterable

- name: debug requestedmemberlist
  ansible.builtin.debug:
    var: requestedmemberlist
    verbosity: 1

- name: groups - reset xml
  delegate_to: localhost
  community.general.xml:
    path: "{{ local_config_path }}"
    xpath: "/opnsense/system/group[name/text()='{{ group.name }}']/member"
    state: absent
    pretty_print: true
  when: configuredmemberlist | default([]) != requestedmemberlist

- name: groups - add users to groups
  delegate_to: localhost
  community.general.xml:
    path: "{{ local_config_path }}"
    xpath: "/opnsense/system/group[name/text()='{{ group.name }}']"
    add_children:
      - member: "{{ item | string }}"
    pretty_print: true
  with_items: "{{ requestedmemberlist }}"
  when: configuredmemberlist | default([]) != requestedmemberlist

...
